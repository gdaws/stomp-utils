#!/usr/bin/env node

var argv = require("optimist")
    .usage("Usage: $0 [options] destination")
    .demand(1)
    .default("p", 61613)
    .default("h", "localhost")
    .default("v", false)
    .boolean("v")
    .alias("p", "port")
    .alias("h", "host")
    .alias("H", "header")
    .alias("l", "content-length")
    .alias("m", "message")
    .alias("f", "file")
    .alias("v", "verbose")
    .describe("H", "Append header line")
    .describe("f", "Message content")
    .argv;

var net         = require("net");
var fs          = require("fs");
var util        = require("util");
var stompit     = require("stompit");

function log(message){
    if(argv.verbose){
        util.print(message + "\n");
    }
}

function fatalError(message){
    process.stderr.write(message + "\n");
    process.exit(1);
}

function fatalErrorEvent(format){
    return function(error){
        fatalError(util.format(format, error.message));
    };
}

var input = process.stdin;
var contentLength = argv["content-length"];

if(argv.file){
    
    var filename = argv.file;
    
    if(contentLength === undefined){
        try{
            contentLength = fs.statSync(filename).size;
        }
        catch(e){
            fatalError(e.message);
        }
    }
    
    input = fs.createReadStream(argv.file);
    input.on("error", fatalErrorEvent("File error: %s"));
}

var socket = net.connect({
    host: argv.host,
    port: argv.port,
    allowHalfOpen: true
}, function(){
    
    log("Connected to " + socket.address().address + ":" + socket.address().port);
    
    var client = new stompit.Client(socket);
    
    client.on("error", fatalErrorEvent("%s"));
    
    client.connect({}, function(server){
        
        log(util.format("Established STOMP %s session with %s", server.headers["version"], server.headers["server"] || "unnamed server"));
        
        var destination = argv._[0];
        
        var headers = {
            "destination": destination,
            "content-length": contentLength
        };
        
        var message = client.send(headers);
        
        message.once("finish", function(){
            
            log(util.format("Sent message to '%s'", destination));
            
            client.disconnect();
        });
        
        input.pipe(message);
    });
});

socket.on("error", fatalErrorEvent("Socket error: %s"));

socket.on("end", function(){
    log("Disconnected from server");
});
